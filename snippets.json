{
  "reducer": {
    "prefix": "reducer",
    "body": [
      "import {",
      "",
      "} from './constants';",
      "",
      "const initialState = {",
      "",
      "}",
      "",
      "function ${TM_DIRECTORY/^.+\\\\([a-zA-Z])(.*)$/${1:/downcase}$2/}ContainerReducer(state=initialState, action) {",
      "  switch (action.type){",
      "",
      "    default:",
      "      return state;",
      "  }",
      "}",
      "" ,
      "export default ${TM_DIRECTORY/^.+\\\\([a-zA-Z])(.*)$/${1:/downcase}$2/}ContainerReducer;",
    ],
    "description": "React reducer"
    },

  "container":  {
    "prefix": "container",
    "body": [
      "import { connect } from 'react-redux'",
      "import { ${1:action} } from './actions'",
      "import ${TM_DIRECTORY/^.+\\\\(.*)$/$1/} from '../../components/${TM_DIRECTORY/^.+\\\\(.*)$/$1/}/${TM_DIRECTORY/^.+\\\\(.*)$/$1/}'",
      "import get${TM_DIRECTORY/^.+\\\\(.*)$/$1/}Fields from './selector'",
      "",
      "const mapStateToProps = state => {",
      "  return {",
      "    ...get${TM_DIRECTORY/^.+\\\\(.*)$/$1/}Fields(state.${TM_DIRECTORY/^.+\\\\([a-zA-Z])(.*)$/${1:/downcase}$2/}ContainerReducer)",
      "  }",
      "}",
      "",
      "const mapDispatchToProps = dispatch => {",
      "  return {",
      "    on${1:/upcase}: (vars) => {",
      "      dispatch($1(vars))",
      "    },",
      "  }",
      "}",
      "",
      "const ${TM_DIRECTORY/^.+\\\\(.*)$/$1/}Container = connect(",
      "  mapStateToProps,",
      "  mapDispatchToProps",
      ")(${TM_DIRECTORY/^.+\\\\(.*)$/$1/})",
      "",
      "export default ${TM_DIRECTORY/^.+\\\\(.*)$/$1/}Container",
    ]
  },

  "selector": {
    "prefix": "selector",
    "body": [
      "const get${TM_DIRECTORY/^.+\\\\(.*)$/$1/}Fields = (state) => {",
      "  return {",
      "    ${1:attribute}: state.$1,",
      "  }",
      "}",
      "",
      "export default get${TM_DIRECTORY/^.+\\\\(.*)$/$1/}Fields",
    ]
  },

  "constants":{
    "prefix": "constants",
    "body": [
      "export const ${1:SOME_ACTION} = '${TM_DIRECTORY/^.+\\\\(.*)$/$1/}Container/$1';",
    ]
  },

  "actions": {
    "prefix": "actions",
    "body": [
      "import {",
      "  ${1:ACTION_TYPE},",
      "} from './constants'",
      "",
      "export function send${1:/lowercase}(payload){",
      "  return {",
      "    type: $1,",
      "    payload",
      "  }",
      "}",
    ]
  },

  "sagas": {
    "prefix": "sagas",
    "body": [
      "import { takeEvery, call, put } from 'redux-saga/effects'",
      "import { ${1:ACTION_TYPE} } from './constants'",
      "import {",
      "  ${2:action}Success,",
      "  ${2}Error",
      "} from './actions'",
      "import { ${2} } from '../../api'",
      "",
      "",
      "function* submit${3: $2}(action) {",
      "  try {",
      "    const response = yield call(${2}, action.payload);",
      "    yield put(${2}Success(response, action.payload))",
      "  }",
      "  catch (error){",
      "    yield put(${2}Error(error))",
      "  }",
      "}",
      "",
      "function* watch${3: $2}Requests() {",
      "  yield takeEvery(${1}, submit${3: $2})",
      "}",
      "",
      "export default watch${3: $2}Requests",
    ]
  },

  "component": {
    "prefix": "component",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "const ${TM_DIRECTORY/^.+\\\\(.*)$/$1/} = ({props}) =>{",
      "  return (",
      "",
      "  )",
      "}",
      "",
      "${TM_DIRECTORY/^.+\\\\(.*)$/$1/}.propTypes = {",
      "",
      "}",
      "",
      "export default ${TM_DIRECTORY/^.+\\\\(.*)$/$1/}",
    ]
  }
}
